0.13.1 (January 18, 2024)
 - Updated @splitsoftware/splitio-commons package to version 1.13.1 and some transitive dependencies for vulnerability fixes.

0.13.0 (December 12, 2023)
 - Added support for Flag Sets in "consumer" and "partial consumer" modes (pluggable storage).
 - Updated SDK cache for browsers using localStorage, to clear cached feature flag definitions before initiating the synchronization process if the cache was previously synchronized with a different SDK key (i.e., a different environment) or different Split Filter criteria, to avoid using invalid cached data when the SDK is ready from cache.
 - Updated @splitsoftware/splitio-commons package to version 1.12.1 that includes flag sets support for consumer modes, and other improvements.
 - Bugfixing - Fixed manager methods in consumer modes to return results in a promise when the SDK is not operational (not ready or destroyed).

0.12.0 (November 3, 2023)
 - Added support for Flag Sets on the SDK, which enables grouping feature flags and interacting with the group rather than individually (more details in our documentation):
    - Added new variations of the get treatment methods to support evaluating flags in given flag set/s.
      - getTreatmentsByFlagSet and getTreatmentsByFlagSets
      - getTreatmentsWithConfigByFlagSets and getTreatmentsWithConfigByFlagSets
    - Added a new optional Split Filter configuration option. This allows the SDK and Split services to only synchronize the flags in the specified flag sets, avoiding unused or unwanted flags from being synced on the SDK instance, bringing all the benefits from a reduced payload.
      - Note: Only applicable when the SDK is in charge of the rollout data synchronization. When not applicable, the SDK will log a warning on init.
    - Added `sets` property to the `SplitView` object returned by the `split` and `splits` methods of the SDK manager to expose flag sets on flag views.
 - Updated @splitsoftware/splitio-commons package to version 1.11.0.

0.11.0 (October 31, 2023)
 - Added `defaultTreatment` property to the `SplitView` object returned by the `split` and `splits` methods of the SDK manager (Related to issue https://github.com/splitio/javascript-commons/issues/225).
 - Updated @splitsoftware/splitio-commons package to version 1.10.0 that includes vulnerability fixes, and adds the `defaultTreatment` property to the `SplitView` object.

0.10.1 (September 22, 2023)
 - Updated @splitsoftware/splitio-commons package to version 1.9.1. This update removes the handler for 'unload' DOM events, that can prevent browsers from being able to put pages in the back/forward cache for faster back and forward loads (Related to issue https://github.com/splitio/javascript-client/issues/759).

0.10.0 (July 18, 2023)
 - Updated @splitsoftware/splitio-commons package to version 1.9.0 that includes minor improvements:
    - Updated streaming architecture implementation to apply feature flag updates from the notification received which is now enhanced, improving efficiency and reliability of the whole update system.

0.9.6 (June 29, 2023)
 - Updated some transitive dependencies for vulnerability fixes.
 - Updated @splitsoftware/splitio-commons package to version 1.8.3 that includes:
    - Updated SDK_READY_TIMED_OUT event to be emitted immediately when a connection error occurs using pluggable storage (i.e., when the wrapper `connect` promise is rejected) in consumer and partial consumer modes.
    - Bugfixing - The `destroy` method has been updated to immediately flag the SDK client as destroyed, to prevent unexpected behaviours when `getTreatment` and `track` methods are called synchronously after `destroy` method is called.

0.9.5 (May 15, 2023)
 - Updated @splitsoftware/splitio-commons package to version 1.8.2 that includes minor improvements.
    - Updated terminology on the SDKs codebase to be more aligned with current standard without causing a breaking change. The core change is the term split for feature flag on things like logs and IntelliSense comments.
    - Updated split storage modules to optimize some operations when using Redis and pluggable storages.
 - Updated some transitive dependencies for vulnerability fixes.

0.9.4 (May 4, 2023)
 - Updated some transitive dependencies for vulnerability fixes.
 - Bugfixing - Updated `unfetch` package as a runtime dependency, required when using the "full" entrypoint (`import { SplitFactory } from '@splitsoftware/splitio-browserjs/full'`).

0.9.3 (March 20, 2023)
 - Updated @splitsoftware/splitio-commons package to version 1.8.1 that includes minor improvements.
 - Updated some transitive dependencies for vulnerability fixes.

0.9.2 (December 16, 2022)
 - Updated some transitive dependencies for vulnerability fixes.
 - Bugfixing - Upgrade @splitsoftware/splitio-commons package to version 1.7.3 which includes a memory leak fix for localhost mode (Related to issue https://github.com/splitio/javascript-commons/issues/181) among other improvements.

0.9.1 (October 14, 2022)
 - Bugfixing - Upgrade @splitsoftware/splitio-commons package to version 1.7.2, that handles `Navigator.sendBeacon` API exceptions in the browser, and fallback to regular Fetch/XHR transport in case of error.

0.9.0 (October 5, 2022)
 - Added a new impressions mode for the SDK called NONE, to be used in factory when there is no desire to capture impressions on an SDK factory to feed Split's analytics engine. Running NONE mode, the SDK will only capture unique keys evaluated for a particular feature flag instead of full blown impressions.
 - Updated default value of `scheduler.featuresRefreshRate` config parameter from 30 seconds to 60 seconds.
 - Updated @splitsoftware/splitio-commons package to version 1.7.1, that improves the performance of feature flag evaluations (i.e., `getTreatment(s)` method calls) when using the default storage in memory, among other improvements.

0.8.0 (July 22, 2022)
 - Added `autoRequire` configuration option to the Google Analytics to Split integration, which takes care of requiring the splitTracker plugin on trackers dynamically created by Google tag managers (See https://help.split.io/hc/en-us/articles/360040838752#set-up-with-gtm-and-gtag.js).
 - Updated browser listener to push remaining impressions and events on 'visibilitychange' and 'pagehide' DOM events, instead of 'unload', which is not reliable in modern mobile and desktop Web browsers.
 - Updated the synchronization flow to be more reliable in the event of an edge case generating delay in cache purge propagation, keeping the SDK cache properly synced.
 - Updated some dependencies for vulnerability fixes.

0.7.0 (June 29, 2022)
 - Added a new config option to control the tasks that listen or poll for updates on feature flags and segments, via the new config sync.enabled . Running online, Split will always pull the most recent updates upon initialization, this only affects updates fetching on a running instance. Useful when a consistent session experience is a must or to save resources when updates are not being used.
 - Updated telemetry logic to track the anonymous config for user consent flag set to declined or unknown.
 - Updated submitters logic, to avoid duplicating the post of impressions to Split cloud when the SDK is destroyed while its periodic post of impressions is running.
 - Bugfixing - Updated submitters logic, to avoid dropping impressions and events that are being tracked while POST request is pending.

0.6.0 (May 24, 2022)
 - Added `scheduler.telemetryRefreshRate` property to SDK configuration.
 - Updated SDK telemetry storage, metrics and updater to be more effective and send less often.
 - Bugfixing - Updated default values for `scheduler.impressionsRefreshRate` config parameter: 300s for OPTIMIZED impression mode and 60s for DEBUG impression mode (previously it was 60s for both).

0.5.0 (April 7, 2022)
 - Added user consent feature to allow delaying or disabling the data tracking from SDK until user consent is explicitly granted or declined. Read more in our docs.
 - Added `scheduler.impressionsQueueSize` property to SDK configuration to limit the amount of impressions tracked in memory. Read more in our docs.
 - Updated format for MySegments keys in LocalStorage, keeping backwards compatibility (issue https://github.com/splitio/javascript-client/issues/638).
 - Updated some dependencies for vulnerability fixes.
 - Bugfixing - Updated internal isObject utility function, to avoid unexpected behaviors on frameworks and libraries that uses multiple VM contexts, like NuxtJS dev server.
 - Bugfixing - Fixed validation of `core.key` SDK configuration param, to parse it into a string and log a warning when passing a number (Related to issue https://github.com/splitio/react-native-client/issues/19).
 - Bugfixing - Fixed validation of `sync.impressionsMode` SDK configuration param, to avoid an exception on SplitFactory instantiation when passing a non-string value.
 - Bugfixing - Fixed streaming synchronization issue when using multiple clients.
 - Bugfixing - Fixed issue with internal Map ponyfill that results in logger not working properly on IE11 browser.

0.4.1 (February 22, 2022)
 - Updated karma and some transitive dependencies for vulnerability fixes.

0.4.0 (January 19, 2022)
 - Added support to SDK clients on browser to optionally bind attributes to the client, keeping these loaded within the SDK along with the user ID, for easier usage when requesting flag.
 - Updated some transitive dependencies for vulnerability fixes.

0.3.0 (January 11, 2022)
 - Added support for the SDK to run in "consumer" and "partial consumer" modes, with a pluggable implementation of it's internal storage,
  enabling customers to implement this caching with any storage technology of choice and connect it to the SDK instance to be used instead of
  its in-memory storage (Read more in our docs here: https://help.split.io/hc/en-us/articles/360058730852-Browser-SDK#sharing-state-with-a-pluggable-storage).
 - Updated @splitsoftware/splitio-commons dependency to version 1.1.0, which includes:
      - Updated multiple modules due to general polishing and improvements, including the replacement of default exports with named exports,
      to avoid runtime errors with some particular configurations of Webpack projects.
      - Bugfixing - Fixed issue returning dynamic configs if treatment name contains a dot (".").

0.2.0 (October 20, 2021)
 - Added localhost mode support (Read more in our docs here: https://help.split.io/hc/en-us/articles/360058730852-Browser-SDK#localhost-mode).
 - Updated @splitsoftware/splitio-commons dependency to version 1.0.0, which includes:
      - Updated localhost mode to emit SDK_READY_FROM_CACHE event in Browser when using localStorage (Related to issue https://github.com/splitio/react-client/issues/34).
      - Updated streaming logic to use the newest version of our streaming service, including:
            - Integration with Auth service V2, connecting to the new channels and applying the received connection delay.
            - Implemented handling of the new MySegmentsV2 notification types (SegmentRemoval, KeyList, Bounded and Unbounded)
            - New control notification for environment scoped streaming reset.
      - Fix of some log messages typos, among other improvements.
 - Updated some NPM dependencies for vulnerability fixes.

0.1.0 (March 30, 2021)
 - Initial public release. Check the official documentation for details: https://help.split.io/hc/en-us/articles/360058730852